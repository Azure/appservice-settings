"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ex = require("@actions/exec");
const io = require("@actions/io");
const AzAuthInitializer = require("./AuthHandler/AzCliAuthHandler");
const AzCliAuthHandler_1 = require("./AuthHandler/AzCliAuthHandler");
const AzureEndpoint_1 = require("./AuthHandler/AzureEndpoint");
const io_util_1 = require("@actions/io/lib/io-util");
exports.authFilePath = "/home/auth.json";
function getHandler() {
    return __awaiter(this, void 0, void 0, function* () {
        let azPath = yield io.which("az", true);
        let stdout = '';
        let code = yield ex.exec(`"${azPath}" account show`, [], { silent: true,
            listeners: {
                stdout: (data) => {
                    stdout += data.toString();
                }
            }
        });
        let resp = JSON.parse(stdout);
        let fileExist = yield io_util_1.exists(exports.authFilePath);
        if (code == 0 && !!resp && !!resp.id) {
            yield AzAuthInitializer.initialize();
            return AzCliAuthHandler_1.AzCliAuthHandler.getEndpoint(resp.id);
        }
        else if (fileExist) {
            return AzureEndpoint_1.AzureEndpoint.getEndpoint(exports.authFilePath);
        }
        else {
            throw new Error("No crdentails found. Please provide Publish Profile path or add a azure login script before this action or put credentiasl file in /home/auth.json.");
        }
    });
}
exports.getHandler = getHandler;
